package operator;

public class Operator3 {
    public static void main(String[] args) {
        int sum1 = 1 + 2 * 3; // 1 + (2 * 3)
        int sum2 = (1 + 2) * 3;
        System.out.println(sum1);
        System.out.println(sum2);

        /* 연산자 우선순위 암기법
        자바는 다음과 같은 연산자 우선순위가 있다. 높은 것에서 낮은 순으로 적었다. 처음에 나오는 괄호 () 가 우선순위가 가
        장 높고, 마지막의 대입 연산자( = )가 우선순위가 가장 낮다.
        1. 괄호 ()
        2. 단항 연산자 (예: ++ , -- , ! , ~ , new , (type) )
        3. 산술 연산자 ( * , / , % 우선, 그 다음에 + , - )
        4. Shift 연산자 ( << , >> , >>> )
        5. 비교 연산자 ( < , <= , > , >= , instanceof )
        6. 등식 연산자 ( == , != )
        7. 비트 연산자 ( & , ^ , | ) */

         /* 실무 개발자들은 연산자 우선순위를 외우지 않는다...
         연산자 우선순위는 딱 2가지만 기억하자
         1. 상식선에서 우선순위를 사용하자
         예시)
         int sum = 1 + 2 * 3;
         당연히 +보다 *이 우선순위가 높다.
         예시2)
         int sum = 1 + 2; 
         당연히 단항 연산을 먼저하고 변수 sum에 값을 대입할것이다
         
         2. 애매하면 괄호()를 사용하기
         코드를 보았을 때 연산자 우선순위를 고민해야 할 것 같으면?
         괄호를 사용해서 우선순위를 명시적을 지정하기
         예)
         ((2 * 2) + (3 * 3) / (3 + 2)
         */

        /* 정리
        * 연산자 우선순위는 상식선에서 생각하고, 애매하면 괄호를 사용하기
        * 누구나 코드를 보고 쉽게 명확하게 이해할 수 있어야 한다. 개발자들이 연산자 우선순위를 외우고 개발하는 것이 아니다.
          - 복잡하면 명확하게 괄호를 넣어라~!
        * 개발에서 가장 중요한 것은 단순함과 명확함이다. 애매하거나 복잡하면 안된다.
        * */

    }
}
